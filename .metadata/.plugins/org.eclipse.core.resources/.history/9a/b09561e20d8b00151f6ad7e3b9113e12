import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;

/**
 * 
 */

/**
 * @author Stepas
 *
 */
public class Date {
	
	private String date;

	/**
	 * 
	 */
	public Date(String date) {
		this.date = date;
	}
	
	public int getMonth() throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		return c.get(Calendar.MONTH);
	}
	public int getDay() throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		return c.get(Calendar.DAY_OF_MONTH);
	}
	public int getYear() throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		return c.get(Calendar.YEAR);
	}
	
	public int getHour() throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		return c.get(Calendar.HOUR_OF_DAY);
	}
	public int getMinutes() throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		return c.get(Calendar.MINUTE);
	}
	public int getSeconds() throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		return c.get(Calendar.SECOND);
	}
	
	public void setMonth(int month) throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		String newDate = month+"/"+this.getDay()+"/"+this.getYear()+" "+this.getHour()+":"+this.getMinutes()+":"+this.getSeconds();
		this.date = newDate;
	}
	public void setDay(int day) throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		String newDate = this.getMonth()+"/"+day+"/"+this.getYear()+" "+this.getHour()+":"+this.getMinutes()+":"+this.getSeconds();
		this.date = newDate;
	}
	public void setYear(int year) throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		String newDate = this.getMonth()+"/"+this.getDay()+"/"+year+" "+this.getHour()+":"+this.getMinutes()+":"+this.getSeconds();
		this.date = newDate;
	}
	
	public void setHour(int hour) throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		String newDate = this.getMonth()+"/"+this.getDay()+"/"+this.getYear()+" "+hour+":"+this.getMinutes()+":"+this.getSeconds();
		this.date = newDate;
	}
	public void setMinutes(int minutes) throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		String newDate = this.getMonth()+"/"+this.getDay()+"/"+this.getYear()+" "+this.getHour()+":"+minutes+":"+this.getSeconds();
		this.date = newDate;
	}
	public void setSeconds(int seconds) throws ParseException{
		DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
		Calendar c = Calendar.getInstance();
		c.setTime(df.parse(date));
		String newDate = this.getMonth()+"/"+this.getDay()+"/"+this.getYear()+" "+this.getHour()+":"+this.getMinutes()+":"+seconds;
		this.date = newDate;
	}
	
	public String toString(){
		return date;
	}

}
