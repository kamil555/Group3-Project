import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

/**
 * @author Stepan Adespya
 * @since November 5, 2015
 */

class User{
	//UserName of person
	protected String username;
	//Whether a person is a bidder,employee, or nonprofit
	protected String user;
	//If nonprofit, Organization name
	protected String organization;

	/**
	 * Saves a User.
	 * @param username
	 * @param pass
	 * @param user
	 */
	public User(String username,String user){
		this.username = username;
		this.user = user;
	}

}

public class Users{
	//Keeps track of all Users
	private ArrayList<User> users;
	private int LOGIN = 1;
	private int CREATE = 2;
	private int BIDDER = 1;
	private int EMPLOYEE = 2;
	private int NONPROFIT = 3;

	public Users() throws IOException{
		users = new ArrayList<User>();
		readFileToUser("C:\\Users\\Stepas\\Documents\\TCSS-360\\Project\\src\\Logs.txt");
		System.out.println("Hello Welcome to AuctionCentral");
		System.out.println("To Login press 1, To Create User press 2");
		@SuppressWarnings("resource")
		Scanner reader = new Scanner(System.in);
		int input = reader.nextInt();
		while(input != LOGIN && input != CREATE){
			System.out.println("Sorry wrong input, Please try again");
			input = reader.nextInt();
		}
		if(input == LOGIN){
			System.out.println("Enter Username :");
			String username = reader.next();
			Login(username);
		}else if(input == CREATE){
			System.out.println("Create Username :");
			String username = reader.next();
			while(isOneUserName(username)){
				System.out.println("Please enter another Username: ");
				username = reader.next();
			}
			System.out.println("Press 1 if you are an Bidder, 2 if you are an AuctionCentral Employee, 3 if you are an Nonprofit Organization");
			int inputUser = reader.nextInt();
			while(inputUser != BIDDER && inputUser != EMPLOYEE && inputUser != NONPROFIT){
				System.out.println("Sorry wrong input, Please try again");
				inputUser = reader.nextInt();
			}
			if(inputUser == BIDDER){
				createUser(username,"Bidder");
			}else if(inputUser == EMPLOYEE){
				createUser(username,"ActionCentral Employee");
			}else if(inputUser == NONPROFIT){
				createUser(username,"Nonprofit");
			}
		}

	}
	/**
	 * Creates a User.
	 * @param username
	 * @param pass
	 * @param user
	 * @throws IOException 
	 */
	public boolean createUser(String username,String user) throws IOException{
		User per = new User(username,user);
		if(per.user.equalsIgnoreCase("nonprofit")){
			System.out.println("Enter Nonprofit Organization: ");
			@SuppressWarnings("resource")
			Scanner reader = new Scanner(System.in);
			String np = reader.nextLine();
			while(isOnePerOrg(np)){
				System.out.println("Please enter another organization name :");
				np = reader.nextLine();
			}

		}
		String contents = ""+username+","+user;
		writeToFile("C:\\Users\\Stepas\\Documents\\TCSS-360\\Project\\src\\Logs.txt",contents);
		users.add(per);
		System.out.println("done");
		new Users();
		return true;
	}

	/**
	 * Login for users.
	 * @param username
	 * @param password
	 * @return
	 * @throws IOException 
	 */
	public boolean Login(String username) throws IOException{
		for(int i = 0; i < users.size(); i++){
			if(users.get(i).username.equalsIgnoreCase(username)){
				if(users.get(i).user.equalsIgnoreCase("Bidder")){
					System.out.println("Bidder");
					//Bidder b = new Bidder();
					break;
				}else if(users.get(i).user.equalsIgnoreCase("AuctionCentral Employee")){
					System.out.println("AuctionCentral Employee");
					//ActionCentralEmployee a = new ActionCentralEmployee();
					break;
				}else if(users.get(i).user.equalsIgnoreCase("nonprofit")){
					System.out.println("Nonprofit");
					//NonProfit p = new NonProfit();
					break;
				}else{
					System.out.println("Sorry could not login please try again");
					new Users();
				}
			}
		}
		return true;


	}

	/**
	 * Checks to see if anyone else has the same organization name. BR #7
	 * @param org (Organization name)
	 * @return true or false
	 */
	private boolean isOnePerOrg(String org){
		for(int i = 0; i < users.size(); i++){
			if(users.get(i).organization.equalsIgnoreCase(org)){
				System.out.println("Sorry only one person can represent the Nonprofit Organization");
				return true;
			}
		}
		return false;
	}

	/**
	 * Checks if there is the same username
	 * @param username
	 * @return true or false
	 */
	private boolean isOneUserName(String username){
		for(int i = 0; i < users.size(); i++){
			if(users.get(i).username.equalsIgnoreCase(username)){
				System.out.println("Sorry the Username is already taken");
				return true;
			}
		}
		return false;
	}

	/**
	 * Reads the file selected to User arraylist
	 * @param fileName
	 */
	private void readFileToUser(String fileName){
		String line = null;
		try {
			// FileReader reads text files in the default encoding.
			FileReader fileReader = 
					new FileReader(fileName);

			// Always wrap FileReader in BufferedReader.
			BufferedReader bufferedReader = 
					new BufferedReader(fileReader);

			while((line = bufferedReader.readLine()) != null) {
				String[] split = line.split(",", 2);
				String username = split[0];
				String user = split[1];
				users.add(new User(username,user));

			}   
			bufferedReader.close();         
		}
		catch(FileNotFoundException ex) {
			System.out.println("Unable to open file '" + fileName + "'");                
		}
		catch(IOException ex) {
			System.out.println("Error reading file '" + fileName + "'");                  
		}
	}

	/**
	 * Writes in the file chosen(use for logs)
	 * @param fileName
	 * @param contents
	 * @throws IOException
	 */
	private void writeToFile(String fileName,String contents) throws IOException{
		FileWriter fw = new FileWriter(fileName,true);
		PrintWriter pw = new PrintWriter(fw);
		pw.write(contents+"\r\n");
		pw.close();
	}
}